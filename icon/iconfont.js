;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-close" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M176.661601 817.172881C168.472798 825.644055 168.701706 839.149636 177.172881 847.338438 185.644056 855.527241 199.149636 855.298332 207.338438 846.827157L826.005105 206.827157C834.193907 198.355983 833.964998 184.850403 825.493824 176.661601 817.02265 168.472798 803.517069 168.701706 795.328267 177.172881L176.661601 817.172881Z"  ></path>' +
    '' +
    '<path d="M795.328267 846.827157C803.517069 855.298332 817.02265 855.527241 825.493824 847.338438 833.964998 839.149636 834.193907 825.644055 826.005105 817.172881L207.338438 177.172881C199.149636 168.701706 185.644056 168.472798 177.172881 176.661601 168.701706 184.850403 168.472798 198.355983 176.661601 206.827157L795.328267 846.827157Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-search" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M1001.526404 991.699618C999.922771 986.822379 999.922771 986.822379 998.661741 984.531443 997.556333 982.547938 996.293839 980.724943 994.702325 978.653549 992.500075 975.787264 989.423708 972.169135 985.358477 967.619563 978.223881 959.634933 967.82403 948.546074 954.04227 934.18551 932.495573 911.733901 910.909628 889.684252 858.479859 836.391998 806.561909 783.619985 784.782022 761.370402 763.425645 739.113463 750.035742 725.158933 739.986204 714.441517 733.331893 706.993367 730.0273 703.294545 727.65239 700.501581 726.365602 698.828322 727.222236 700.438869 727.222236 700.438869 728.57702 704.41879 730.685899 711.913483 730.685899 711.913483 721.610157 729.174018 803.853596 649.91606 851.33145 539.987051 851.33145 422.399774 851.33145 189.11482 665.530044 0 436.332393 0 207.134741 0 21.333333 189.11482 21.333333 422.399774 21.333333 655.684727 207.134741 844.799548 436.332393 844.799548 441.356706 844.799548 446.556279 844.56416 452.347883 844.11767 456.487002 843.798575 460.079727 843.454155 466.651669 842.776804 479.958906 841.405269 484.804847 841.014569 490.397372 841.014558 499.896397 841.014541 514.964663 837.646929 537.39015 831.429666 540.021178 830.700239 542.719546 829.938705 545.476431 829.148403 553.976567 826.711712 562.667765 824.108471 571.097184 821.505798 576.160226 819.942528 580.026436 818.721914 582.233225 818.013231 595.480279 813.759108 602.830912 799.380094 598.651326 785.896804 594.471738 772.413515 580.344653 764.931795 567.097598 769.18592 565.058735 769.840674 561.367413 771.006074 556.494825 772.510539 548.364858 775.020755 539.986116 777.530404 531.839533 779.865745 529.217662 780.617342 526.657771 781.339795 524.170112 782.029476 506.936476 786.807345 493.480702 789.814579 490.397278 789.814586 482.458716 789.814601 476.720548 790.277235 461.583853 791.837329 455.416051 792.473024 452.140828 792.787008 448.548723 793.063932 443.933724 793.419714 439.960704 793.599575 436.332393 793.599575 234.916275 793.599575 71.63625 627.407763 71.63625 422.399774 71.63625 217.391785 234.916275 51.199973 436.332393 51.199973 637.74851 51.199973 801.028533 217.391785 801.028533 422.399774 801.028533 525.775443 759.336083 622.309077 687.025254 691.994987 677.769918 709.563029 677.769918 709.563029 679.976768 717.62707 681.566101 722.305182 681.566101 722.305182 682.808947 724.550298 683.910231 726.511657 685.170219 728.326692 686.754421 730.386692 688.964348 733.260343 692.047349 736.886044 696.115554 741.439575 703.261474 749.437982 713.66454 760.532418 727.438434 774.887134 749.001325 797.359294 770.84669 819.675765 822.916311 872.601946 875.194278 925.7399 896.716879 947.724843 918.057933 969.962174 931.455439 983.922347 941.502012 994.634524 948.144469 1002.068378 951.440527 1005.757135 953.805218 1008.538259 955.077419 1010.194061 954.139053 1008.441707 954.139053 1008.441707 952.75811 1004.249822 950.686453 996.172693 950.686453 996.172693 960.850534 978.849743 950.24269 987.977788 948.913429 1004.130236 957.881542 1014.927251 966.849655 1025.724265 982.719104 1027.077231 993.326948 1017.949188 1003.683753 1000.332838 1003.683753 1000.332838 1001.526404 991.699618Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-down" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M970.38 338.954c0 0-459.558 484.355-459.558 484.355s-64.093-67.486-64.093-67.486c0 0 0 0 0 0 0 0-395.488-416.884-395.488-416.884 0 0 64.093-67.535 64.093-67.535 0 0 395.488 416.884 395.488 416.884 0 0 395.488-416.884 395.488-416.884 0 0 64.093 67.535 64.093 67.535z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-gouwuche" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M995.106743 233.749943c-6.928457-9.034971-17.678629-14.321371-29.035886-14.321371L199.071086 219.428571 166.857143 65.642057C163.322514 48.714971 148.394057 36.571429 131.072 36.571429L36.571429 36.571429C16.3584 36.571429 0 52.928 0 73.142857s16.356571 36.571429 36.571429 36.571429l64.786286 0 139.428571 665.786514c3.536457 16.928914 18.464914 29.070629 35.785143 29.070629L827.428571 804.571429c20.214857 0 36.571429-16.356571 36.571429-36.571429s-16.356571-36.571429-36.571429-36.571429l-521.142857 0-22.965029-109.714286L877.714286 621.714286c16.535771 0 31.036343-11.106743 35.320686-27.106743l88.356571-329.142857C1004.357486 254.500571 1002.000457 242.750171 995.106743 233.749943zM849.678629 548.571429 268.000914 548.571429l-53.6064-256 704 0L849.678629 548.571429z"  ></path>' +
    '' +
    '<path d="M347.428571 841.142857c-50.428343 0-91.428571 41.000229-91.428571 91.428571s41.000229 91.428571 91.428571 91.428571 91.428571-41.000229 91.428571-91.428571S397.856914 841.142857 347.428571 841.142857zM347.428571 969.142857c-20.178286 0-36.571429-16.393143-36.571429-36.571429s16.393143-36.571429 36.571429-36.571429 36.571429 16.393143 36.571429 36.571429S367.606857 969.142857 347.428571 969.142857z"  ></path>' +
    '' +
    '<path d="M749.714286 841.142857c-50.428343 0-91.428571 41.000229-91.428571 91.428571s41.000229 91.428571 91.428571 91.428571 91.428571-41.000229 91.428571-91.428571S800.142629 841.142857 749.714286 841.142857zM749.714286 969.142857c-20.178286 0-36.571429-16.393143-36.571429-36.571429s16.393143-36.571429 36.571429-36.571429 36.571429 16.393143 36.571429 36.571429S769.892571 969.142857 749.714286 969.142857z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-map" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M534.149974 928.406828 510.991532 958.721251l-23.165606-30.314423c-11.874445-15.509229-290.790876-382.175189-290.790876-549.188994 0-174.900426 140.845819-317.226968 313.956482-317.226968 173.123966 0 313.949318 142.326543 313.949318 317.226968C824.939827 546.231639 546.031583 912.897599 534.149974 928.406828zM510.991532 121.169687c-140.838655 0-255.390621 115.745141-255.390621 258.047124 0 111.254873 167.17037 361.885074 255.390621 482.061131 88.226391-120.18629 255.384481-370.858446 255.384481-482.061131C766.376013 236.915851 651.830187 121.169687 510.991532 121.169687zM359.727433 379.217834c0-84.272335 67.842131-152.836921 151.264099-152.836921 83.420945 0 151.257959 68.564585 151.257959 152.836921 0 84.256986-67.835991 152.823618-151.257959 152.823618C427.569564 532.041452 359.727433 463.47482 359.727433 379.217834zM603.682607 379.217834c0-51.658544-41.580001-93.657077-92.691075-93.657077s-92.697215 41.998533-92.697215 93.657077c0 51.646264 41.586141 93.644797 92.697215 93.644797S603.682607 430.864098 603.682607 379.217834z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-back" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M302.525128 512.282433c3.240811 2.270716 5.717212 3.529383 7.585769 5.389754C439.263395 646.732587 568.350402 775.863596 697.519274 904.905578c7.895831 7.890714 12.644995 16.645099 10.933003 28.069289-1.701758 11.364839-8.035 19.35379-18.628266 23.426549-10.815323 4.155646-21.038152 2.339278-30.05348-5.130857-1.738597-1.440815-3.296069-3.103688-4.892427-4.705162-136.827295-136.816039-273.649474-273.632077-410.470629-410.458349-16.056698-16.063861-16.134469-32.401967-0.215918-48.326659C381.296169 350.670661 518.423293 213.589586 655.471622 76.41846c8.986675-8.992815 19.054985-13.530155 31.720446-10.029424 20.727067 5.723352 28.573779 31.160697 14.738679 47.623647-1.845021 2.199085-3.956102 4.188392-5.995551 6.221702C566.976102 249.198595 438.015985 378.157689 309.035402 507.10041 307.577191 508.547365 305.816081 509.678118 302.525128 512.282433L302.525128 512.282433 302.525128 512.282433zM302.525128 512.282433"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)